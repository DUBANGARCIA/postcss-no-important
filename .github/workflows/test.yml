name: Testing

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    strategy:
      matrix:
        node-version: [20, 22]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          bun-version: 1.2.19

      - name: Install dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bun install --frozen-lockfile --no-interactive

      - name: Run tests with coverage
        run: bun test --coverage

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: coverage-${{ matrix.os }}-node${{ matrix.node-version }}
          path: coverage/
          retention-days: 7

      - name: Upload to Codecov
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: ${{ matrix.os }}-node${{ matrix.node-version }}
          name: ${{ matrix.os }}-node${{ matrix.node-version }}
          fail_ci_if_error: false

  coverage-summary:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Download coverage from Ubuntu + Node 22
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: coverage-ubuntu-latest-node22
          path: coverage/

      - name: Display coverage summary
        run: |
          if [ -f coverage/lcov.info ]; then
            echo "üìä Coverage Report Generated"
            echo "Files in coverage/:"
            ls -la coverage/
          
            if command -v lcov >/dev/null 2>&1; then
              lcov --summary coverage/lcov.info 2>/dev/null || echo "LCOV summary not available"
            fi
          else
            echo "‚ö†Ô∏è No coverage report found"
          fi

      - name: Upload final coverage report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: final-coverage-report
          path: coverage/
          retention-days: 30
